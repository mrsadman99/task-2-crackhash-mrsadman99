services:
  manager:
    build:
      context: ../
      dockerfile: ./deploy/manager-dockerfile
    networks:
      - external-net
      - rmq-net
      - db-net
    volumes:
      - manager_logs:/manager/logs

  worker:
    build:
      context: ../
      dockerfile: ./deploy/worker-dockerfile
    networks:
      - rmq-net
    volumes:
      - /worker/logs

  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - manager
      - mongo-ui
    ports:
      - 3000:3000
      - 3001:3001
    networks:
      - external-net

  mongo1:
    build:
      dockerfile: ./mongo-dockerfile
      context: ./mongo
    networks:
      - db-net
    volumes:
      - ./mongo/initMongo.js:/docker-entrypoint-initdb.d/initMongo.js:ro
      - mongo1_config:/etc/mongodb
      - mongo1_data:/data/db
      - mongo1_configdb:/data/configdb
    env_file: ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD
    healthcheck:
      start_period: 10s
      timeout: 60s
      interval: 5s
      retries: 10
      test: "mongosh -u $MONGO_ROOT_USER -p $MONGO_ROOT_PASSWORD --quiet --eval 'load(\"/etc/mongodb/initReplicas.js\")'"

  mongo2:
    build:
      dockerfile: ./mongo-dockerfile
      context: ./mongo
    networks:
      - db-net
    volumes:
      - ./mongo/initMongo.js:/docker-entrypoint-initdb.d/initMongo.js:ro
      - mongo2_config:/etc/mongodb
      - mongo2_data:/data/db
      - mongo2_configdb:/data/configdb
    env_file: ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD

  mongo3:
    build:
      dockerfile: ./mongo-dockerfile
      context: ./mongo
    networks:
      - db-net
    volumes:
      - ./mongo/initMongo.js:/docker-entrypoint-initdb.d/initMongo.js:ro
      - mongo3_config:/etc/mongodb
      - mongo3_data:/data/db
      - mongo3_configdb:/data/configdb
    env_file: ./.env
    environment:
      MONGO_INITDB_ROOT_USERNAME: $MONGO_ROOT_USER
      MONGO_INITDB_ROOT_PASSWORD: $MONGO_ROOT_PASSWORD

  mongo-ui:
    image: mongo-express:1.0.2
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    networks:
      - db-net
      - external-net
    env_file: ./.env
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: $MONGO_ROOT_USER
      ME_CONFIG_MONGODB_ADMINPASSWORD: $MONGO_ROOT_PASSWORD
      ME_CONFIG_MONGODB_URL: $MONGO_ROOT_CONNECT_URL
      ME_CONFIG_BASICAUTH: false

  rmq:
    image: rabbitmq:3.13
    networks:
      - rmq-net
    env_file: ./.env
    volumes:
      -  ./rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - rmq_logs:/var/log/rabbitmq
      - rmq_state:/var/lib/rabbitmq

volumes:
  manager_logs:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:
  mongo1_configdb:
  mongo2_configdb:
  mongo3_configdb:
  rmq_logs:
  rmq_state:

networks:
  external-net:
  rmq-net:
  db-net:
